
@using WebUI.Components.Models
@using Application.Service.Commands
@using Application.DTO.Request
@using Application.DTO.Response
<MudDialog>
    <TitleContent>
        Create Courier
    </TitleContent>
    <DialogContent>
        <MudForm @bind-IsValid="@_isFormValid">
            <MudTextField @bind-value="_courierModel.Name"
            Variant="@_defaultVariant"
            T="string"
            Label="Courier Name"
            Required="true" RequiredError="Name is required!"
            Margin="Margin.Dense"/>

        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit" Disabled="@(!_isFormValid)">Ok</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    private static readonly Variant _defaultVariant = Theme.DefaultInputVariant();

    private bool _isFormValid { get; set; } = false;

    private CourierModel _courierModel { get; set; } = new CourierModel();

    [Parameter]
    public required GetStaffResponseDTO CurrentStaff { get; set; }

    private async Task Submit()
    {
        var createCourierDTO = new CreateCourierRequestDTO()
        {
            CreatedBy = CurrentStaff.CreatedBy,
            Name = _courierModel.Name,
            StaffIds = _courierModel.StaffIds,
            WarehouseIds = _courierModel.WarehouseIds,
        };
        var createCourierCommand = new CreateCourierCommand(createCourierDTO);
        var createdCourierResponseDTO = await Mediator.Send(createCourierCommand);

        var createdCourierModel = new CourierModel()
        {
            Id = createdCourierResponseDTO.Id,
            Name = _courierModel.Name,
            StaffIds = _courierModel.StaffIds,
            WarehouseIds = _courierModel.WarehouseIds,
        };
        MudDialog.Close(DialogResult.Ok(createdCourierModel));
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}
    