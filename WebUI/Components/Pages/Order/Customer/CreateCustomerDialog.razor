
@using WebUI.Components.Models
@using Application.Service.Commands
@using Application.DTO.Request
@using Application.DTO.Response
<MudDialog>
    <TitleContent>
        Create Customer
    </TitleContent>
    <DialogContent>
        <MudForm @bind-IsValid="@_isFormValid">
            <MudTextField @bind-value="_customerModel.FirstName"
                          Variant="@_defaultVariant"
                          T="string"
                          Label="First Name"
                          Required="true" RequiredError="First Name is required!"
                          Margin="Margin.Dense"/>
            
            <MudTextField @bind-value="_customerModel.LastName"
                          Variant="@_defaultVariant"
                          T="string"
                          Label="Last Name"
                          Required="true" RequiredError="Last Name is required!"
                          Margin="Margin.Dense"/>
            
            <MudTextField @bind-value="_customerModel.Email"
                          Variant="@_defaultVariant"
                          T="string"
                          Label="Email"
                          Required="true" RequiredError="Email is required!"
                          Margin="Margin.Dense" />
            
            <MudTextField @bind-value="_customerModel.Address"
                          Variant="@_defaultVariant"
                          T="string"
                          Label="Address"
                          Required="true" RequiredError="Address is required!"
                          Margin="Margin.Dense" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit" Disabled="@(!_isFormValid)">Ok</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    private static readonly Variant _defaultVariant = Theme.DefaultInputVariant();

    private bool _isFormValid { get; set; } = false;

    private CustomerModel _customerModel { get; set; } = new CustomerModel();

    [Parameter]
    public required CurrentUserModel CurrentStaff { get; set; }

    private async Task Submit()
    {
        var createCustomerDTO = new CreateCustomerRequestDTO()
        {
            CreatedBy = CurrentStaff.Id,
            Address = _customerModel.Address,
            Email = _customerModel.Email,
            FirstName = _customerModel.FirstName,
            LastName = _customerModel.LastName,
        };
        var createCustomerCommand = new CreateCustomerCommand(createCustomerDTO);
        var createdCustomerResponseDTO = await Mediator.Send(createCustomerCommand);

        var createdCustomerModel = new CustomerModel()
        {
            Id = createdCustomerResponseDTO.Id,
            Address = _customerModel.Address,
            Email = _customerModel.Email,
            FirstName = _customerModel.FirstName,
            LastName = _customerModel.LastName,
        };
        MudDialog.Close(DialogResult.Ok(createdCustomerModel));
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}
    