@using WebUI.Components.Models
@using Application.Service.Commands
@using Application.DTO.Request
@using Application.DTO.Response
<MudDialog>
    <TitleContent>
        Create Shop
    </TitleContent>
    <DialogContent>
        <MudForm @bind-IsValid="@_isFormValid">
            <MudTextField @bind-value="_shopModel.Name"
            Variant="@_defaultVariant"
            T="string"
            Label="Shop Name"
            Required="true" RequiredError="Name is required!"
            Margin="Margin.Dense"/>

            <MudTextField @bind-value="_shopModel.Platform"
            Variant="@_defaultVariant"
            T="string"
            Label="Platform Name"
            Required="true" RequiredError="Platform is required!"
            Margin="Margin.Dense" />

            <MudTextField @bind-value="_shopModel.Address"
            Variant="@_defaultVariant"
            T="string"
            Label="Address"
            Margin="Margin.Dense" />

            <MudTextField @bind-value="_shopModel.Website"
            Variant="@_defaultVariant"
            T="string"
            Label="Website"
            Margin="Margin.Dense" />

        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit" Disabled="@(!_isFormValid)">Ok</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    private static readonly Variant _defaultVariant = Theme.DefaultInputVariant();

    private bool _isFormValid { get; set; } = false;

    private ShopModel _shopModel { get; set; } = new ShopModel();

    [Parameter]
    public required CurrentUserModel CurrentStaff { get; set; }

    private async Task Submit()
    {
        var createShopDTO = new CreateShopRequestDTO()
        {
            CreatedBy = CurrentStaff.Id,
            Name = _shopModel.Name,
            Platform = _shopModel.Platform,
            Address = _shopModel.Address,
            Website = _shopModel.Website,
            ProductIds = _shopModel.ProductIds,
        };
        var createShopCommand = new CreateShopCommand(createShopDTO);
        var createdShopResponseDTO = await Mediator.Send(createShopCommand);

        var createdShopModel = new ShopModel()
        {
            Id = createdShopResponseDTO.Id,
            Name = _shopModel.Name,
            Platform = _shopModel.Platform,
            Address = _shopModel.Address,
            Website = _shopModel.Website,
            ProductIds = _shopModel.ProductIds,
        };
        MudDialog.Close(DialogResult.Ok(createdShopModel));
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}