@using WebUI.Components.Models
@using Application.Service.Commands
@using Application.DTO.Request
@using Application.DTO.Response
<MudDialog>
    <TitleContent>
        Create Product
    </TitleContent>
    <DialogContent>
        <MudForm @bind-IsValid="@_isFormValid">
            <MudTextField @bind-value="_productModel.Sku"
                          Variant="@_defaultVariant"
                          T="string"
                          Label="SKU"
                          Required="true" RequiredError="SKU is required!"
                          Margin="Margin.Dense"/>

            <MudTextField @bind-value="_productModel.Name"
                          Variant="@_defaultVariant"
                          T="string"
                          Label="Name"
                          Required="true" RequiredError="Name is required!"
                          Margin="Margin.Dense" />

            <MudTextField @bind-value="_productModel.Description"
                          Variant="@_defaultVariant"
                          T="string"
                          Label="Description"
                          Required="true" RequiredError="Description is required!"
                          Margin="Margin.Dense" />

            <MudTextField @bind-value="_productModel.Price"
                          Variant="@_defaultVariant"
                          T="decimal"
                          Label="Price"
                          Required="true" RequiredError="Price is required!"
                          Margin="Margin.Dense" />

            <MudTextField @bind-value="_productModel.Tag"
                          Variant="@_defaultVariant"
                          T="string"
                          Label="Tag"
                          Required="true" RequiredError="Tag is required!"
                          Margin="Margin.Dense" />

            <MudTextField @bind-value="_productModel.Weight"
                          Variant="@_defaultVariant"
                          T="double"
                          Label="Weight"
                          Required="true" RequiredError="Weight is required!"
                          Margin="Margin.Dense" />

            <MudTextField @bind-value="_productModel.Height"
                          Variant="@_defaultVariant"
                          T="double"
                          Label="Height"
                          Required="true" RequiredError="Height is required!"
                          Margin="Margin.Dense" />

            <MudTextField @bind-value="_productModel.Length"
                          Variant="@_defaultVariant"
                          T="double"
                          Label="Length"
                          Required="true" RequiredError="Length is required!"
                          Margin="Margin.Dense" />

            <MudTextField @bind-value="_productModel.Width"
                          Variant="@_defaultVariant"
                          T="double"
                          Label="Width"
                          Required="true" RequiredError="Width is required!"
                          Margin="Margin.Dense" />
        </MudForm>
        </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit" Disabled="@(!_isFormValid)">Ok</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    private static readonly Variant _defaultVariant = Theme.DefaultInputVariant();

    private bool _isFormValid { get; set; } = false;
    private ProductModel _productModel { get; set; } = new ProductModel();

    [Parameter]
    public GetStaffResponseDTO StaffResponseDTO { get; set; }

    private async Task Submit()
    {
        var createProductDTO = new CreateProductRequestDTO()
        {
            CreatedBy = StaffResponseDTO.CreatedBy,
            Description = _productModel.Description,
            Sku = _productModel.Sku,
            Height = _productModel.Height,
            Length = _productModel.Length,
            Name = _productModel.Name,
            Price = _productModel.Price,
            Tag = _productModel.Tag,
            Weight = _productModel.Weight,
            Width = _productModel.Width,
            ProductGroupIds = _productModel.ProductGroupIds,
        };
        var createProductCommand = new CreateProductCommand(createProductDTO);
        var createdProductResponseDTO = await Mediator.Send(createProductCommand);
        SnackBar.Add($"{_productModel.Name} created");

        var createdProductModel = new ProductModel()
        {
            Id = createdProductResponseDTO.Id,
            ProductGroupIds = _productModel.ProductGroupIds,
            Description = _productModel.Description,
            Sku = _productModel.Sku,
            Height = _productModel.Height,
            Length = _productModel.Length,
            Name = _productModel.Name,
            Price = _productModel.Price,
            Tag = _productModel.Tag,
            Weight = _productModel.Weight,
            Width = _productModel.Width,
        };
        MudDialog.Close(DialogResult.Ok(createdProductModel));
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}