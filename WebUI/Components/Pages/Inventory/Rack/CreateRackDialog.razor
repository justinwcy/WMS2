<MudDialog>
    <TitleContent>
        Create Rack
    </TitleContent>
    <DialogContent>
        <MudForm @bind-IsValid="@_isFormValid">
            
            <MudSelect @bind-Value="_rackModel.ZoneId"
                       T="Guid?"
                       ToStringFunc="@(id=> _allZoneModels.FirstOrDefault(zoneModel=>zoneModel.Id == id)?.Name)"
                       Variant="@_defaultVariant"
                       Label="Status"
                       Margin="Margin.Normal"
                       Dense="false"
                       Disabled="false"
                       ReadOnly="false"
                       Placeholder=@("Zone")
                       MultiSelection="false"
                       HelperText=@("Please select a Zone")
                       HelperTextOnFocus="true"
                       Clearable="false"
                       Required="true"
                       RequiredError="Please select a Zone">
                @foreach (var zoneModel in _allZoneModels)
                {
                    <MudSelectItem T="Guid?" Value="@zoneModel.Id" />
                }
            </MudSelect>

            <MudTextField @bind-value="_rackModel.Name"
                          Variant="@_defaultVariant"
                          T="string"
                          Label="Rack Name"
                          Required="true" RequiredError="Name is required!"
                          Margin="Margin.Dense"/>

            <MudTextField @bind-value="_rackModel.MaxWeight"
                          Variant="@_defaultVariant"
                          T="double"
                          Label="Max Weight"
                          Margin="Margin.Dense"/>

            <MudTextField @bind-value="_rackModel.Height"
                          Variant="@_defaultVariant"
                          T="double"
                          Label="Height"
                          Margin="Margin.Dense"/>

            <MudTextField @bind-value="_rackModel.Width"
                          Variant="@_defaultVariant"
                          T="double"
                          Label="Width"
                          Margin="Margin.Dense"/>

            <MudTextField @bind-value="_rackModel.Depth"
                          Variant="@_defaultVariant"
                          T="double"
                          Label="Depth"
                          Margin="Margin.Dense"/>

        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit" Disabled="@(!_isFormValid)">Ok</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    private static readonly Variant _defaultVariant = Theme.DefaultInputVariant();

    private bool _isFormValid { get; set; } = false;

    private RackModel _rackModel { get; set; } = new RackModel();

    [Parameter]
    public required CurrentUserModel CurrentStaff { get; set; }

    private List<ZoneModel> _allZoneModels { get; set; } = [];

    protected override async Task OnParametersSetAsync()
    {
        var getAllZoneIdsByCompanyIdQuery = new GetAllZoneIdsByCompanyIdQuery(CurrentStaff.CompanyId);
        var zoneIds = await Mediator.Send(getAllZoneIdsByCompanyIdQuery);
        foreach (var zoneId in zoneIds)
        {
            var getZoneByIdQuery = new GetZoneByIdQuery(zoneId);
            var zoneDTO = await Mediator.Send(getZoneByIdQuery);

            var zoneModel = new ZoneModel()
            {
                Id = zoneDTO.Id,
                Name = zoneDTO.Name,
                StaffIds = zoneDTO.StaffIds,
                RackIds = zoneDTO.RackIds,
                WarehouseId = zoneDTO.WarehouseId,
            };
            _allZoneModels.Add(zoneModel);
        }
    }

    private async Task Submit()
    {
        var createRackDTO = new CreateRackRequestDTO()
        {
            CreatedBy = CurrentStaff.Id,
            Name = _rackModel.Name,
            ProductIds = _rackModel.ProductIds,
            Height = _rackModel.Height,
            Width = _rackModel.Width,
            Depth = _rackModel.Depth,
            MaxWeight = _rackModel.MaxWeight,
            ZoneId = _rackModel.ZoneId,
        };
        var createRackCommand = new CreateRackCommand(createRackDTO);
        var createdRackResponseDTO = await Mediator.Send(createRackCommand);

        var createdRackModel = new RackModel()
        {
            Id = createdRackResponseDTO.Id,
            Name = _rackModel.Name,
            ProductIds = _rackModel.ProductIds,
            Height = _rackModel.Height,
            Width = _rackModel.Width,
            Depth = _rackModel.Depth,
            MaxWeight = _rackModel.MaxWeight,
            ZoneId = _rackModel.ZoneId,
        };
        MudDialog.Close(DialogResult.Ok(createdRackModel));
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}
    