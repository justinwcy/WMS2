<MudDialog>
    <TitleContent>
        Create Warehouse
    </TitleContent>
    <DialogContent>
        <MudForm @bind-IsValid="@_isFormValid">
            <MudTextField @bind-value="_warehouseModel.Name"
                          Variant="@_defaultVariant"
                          T="string"
                          Label="Warehouse Name"
                          Required="true" RequiredError="Name is required!"
                          Margin="Margin.Dense" />

            <MudTextField @bind-value="_warehouseModel.Address"
                          Variant="@_defaultVariant"
                          T="string"
                          Label="Warehouse Address"
                          Required="true" RequiredError="Address is required!"
                          Margin="Margin.Dense" />

        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit" Disabled="@(!_isFormValid)">Ok</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }
    private static readonly Variant _defaultVariant = Theme.DefaultInputVariant();

    private bool _isFormValid { get; set; } = false;

    private WarehouseModel _warehouseModel { get; set; } = new WarehouseModel();

    [Parameter]
    public required CurrentUserModel CurrentStaff { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
    }

    private async Task Submit()
    {
        var createWarehouseDTO = new CreateWarehouseRequestDTO()
            {
                CreatedBy = CurrentStaff.Id,
                Name = _warehouseModel.Name,
                Address = _warehouseModel.Address,
                CompanyId = CurrentStaff.CompanyId,
                ZoneIds = _warehouseModel.ZoneIds,
            };
        var createWarehouseCommand = new CreateWarehouseCommand(createWarehouseDTO);
        var createdWarehouseResponseDTO = await Mediator.Send(createWarehouseCommand);

        var createdWarehouseModel = new WarehouseModel()
            {
                Id = createdWarehouseResponseDTO.Id,
                Name = _warehouseModel.Name,
                Address = _warehouseModel.Address,
                CompanyId = CurrentStaff.CompanyId,
                ZoneIds = _warehouseModel.ZoneIds,
            };
        MudDialog.Close(DialogResult.Ok(createdWarehouseModel));
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}