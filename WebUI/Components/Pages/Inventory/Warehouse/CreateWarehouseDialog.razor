@using WebUI.Components.Models
@using Application.Service.Commands
@using Application.DTO.Request
@using Application.DTO.Response
@using Application.Service.Queries
<MudDialog>
    <TitleContent>
        Create Warehouse
    </TitleContent>
    <DialogContent>
        <MudForm @bind-IsValid="@_isFormValid">
            <MudTextField @bind-value="_warehouseModel.Name"
                          Variant="@_defaultVariant"
                          T="string"
                          Label="Warehouse Name"
                          Required="true" RequiredError="Name is required!"
                          Margin="Margin.Dense"/>

            <MudTextField @bind-value="_warehouseModel.Address"
                          Variant="@_defaultVariant"
                          T="string"
                          Label="Warehouse Address"
                          Required="true" RequiredError="Address is required!"
                          Margin="Margin.Dense"/>
            
            <MudSelect @bind-Value="_warehouseModel.CompanyId"
                       T="Guid?"
                       ToStringFunc="@(id=> _allCompanyModels.FirstOrDefault(companyModel=>companyModel.Id == id)?.Name)"
                       Variant="@_defaultVariant"
                       Label="Company"
                       Margin="Margin.Normal"
                       Dense="false"
                       Disabled="false"
                       ReadOnly="false"
                       Placeholder=@("Company")
                       MultiSelection="false"
                       HelperText=@("Please select a company")
                       HelperTextOnFocus="true"
                       Clearable="false"
                       Required="true"
                       RequiredError="Please select a company">
                @foreach (var companyModel in _allCompanyModels)
                {
                    <MudSelectItem T="Guid?" Value="companyModel.Id"></MudSelectItem>
                }
            </MudSelect>

        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit" Disabled="@(!_isFormValid)">Ok</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    private static readonly Variant _defaultVariant = Theme.DefaultInputVariant();

    private bool _isFormValid { get; set; } = false;

    private WarehouseModel _warehouseModel { get; set; } = new WarehouseModel();
    private List<CompanyModel> _allCompanyModels { get; set; } = [];

    [Parameter]
    public required CurrentUserModel CurrentStaff { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        var getAllCompanyIdsQuery = new GetAllCompanyIdsQuery();
        var companyIds = await Mediator.Send(getAllCompanyIdsQuery);

        foreach (var companyId in companyIds)
        {
            var getCompanyByIdQuery = new GetCompanyByIdQuery(companyId);
            var companyDTO = await Mediator.Send(getCompanyByIdQuery);

            var companyModel = new CompanyModel()
            {
                Id = companyDTO.Id,
                Name = companyDTO.Name,
                StaffIds = companyDTO.StaffIds,
                WarehouseIds = companyDTO.WarehouseIds,
            };
            _allCompanyModels.Add(companyModel);
        }
    }

    private async Task Submit()
    {
        var createWarehouseDTO = new CreateWarehouseRequestDTO()
        {
            CreatedBy = CurrentStaff.Id,
            Name = _warehouseModel.Name,
            Address = _warehouseModel.Address,
            CompanyId = _warehouseModel.CompanyId,
            ZoneIds = _warehouseModel.ZoneIds,
        };
        var createWarehouseCommand = new CreateWarehouseCommand(createWarehouseDTO);
        var createdWarehouseResponseDTO = await Mediator.Send(createWarehouseCommand);

        var createdWarehouseModel = new WarehouseModel()
        {
            Id = createdWarehouseResponseDTO.Id,
            Name = _warehouseModel.Name,
            Address = _warehouseModel.Address,
            CompanyId = _warehouseModel.CompanyId,
            ZoneIds = _warehouseModel.ZoneIds,
        };
        MudDialog.Close(DialogResult.Ok(createdWarehouseModel));
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}