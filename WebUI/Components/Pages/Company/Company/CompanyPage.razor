@page "/company"
@implements IMainPage
@using Application.DTO.Response
@using WebUI.Utilities
@using Application.Service.Queries

<Company CompanyIds="CompanyIds" CurrentStaff="CurrentStaff" MainPage="MainPage" PageComponents="PageComponents"/>

@code {
    private IMainPage MainPage => this;
    private List<IPageComponent> PageComponents = [];

    private List<Guid> CompanyIds { get; set; } = new List<Guid>();
    private GetStaffResponseDTO CurrentStaff { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await InitializeData();
    }

    public async Task InitializeData()
    {
        var oldCompanyIds = CompanyIds.ToList();
        CurrentStaff = await UserUtilities.GetCurrentUser(Mediator, AuthenticationStateProvider);

        var getAllCompanyIdsQuery = new GetAllCompanyIdsQuery();
        CompanyIds = await Mediator.Send(getAllCompanyIdsQuery);

        // if (!oldCompanyIds.All(companyId => CompanyIds.Contains(companyId)) || !CompanyIds.All(companyId => oldCompanyIds.Contains(companyId)))
        // {
        //     StateHasChanged();
        // }
    }
}
